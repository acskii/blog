[{"title":"Testing Post 2","author":"acskii","date":"13/4/2025","tags":["code","blog","post","cool"],"id":1744553360582,"content":"# Testing Title"},{"title":"Testing Post 1","author":"acskii","date":"13/4/2025","tags":["code","blog","post"],"id":1744546291383,"content":"```txt\r\nAn app that contains manga and stories from some sources in one place!\r\n```\r\n\r\n## Table of Contents\r\n- [Important Notes](#important)\r\n- [Features](#features)\r\n- [Python Setup](#python-set-up)\r\n- [Set-up](#set-up)\r\n- [Running Project](#running)\r\n- [Creating an Admin User](#admin-user)\r\n- [Contributions](#contributions)\r\n- [License](#license)\r\n\r\n## Important\r\n### This is a Django application\r\n> [!IMPORTANT]\r\n> It is recommended that the user is familiar with Django framework.\r\n>\r\n> Check out https://www.djangoproject.com/start/ for more.\r\n\r\n### Redis caching is used\r\n> [!IMPORTANT]\r\n> It is *required* to know how to set-up a Redis server up-and-running, as the app **won't** run\r\n> correctly.\r\n> \r\n> Check out https://redis.io for more.\r\n\r\n## Features\r\nHere are some of the features that this app is capable of:\r\n- Get details about indivitual series\r\n- Preview chapters of multiple series\r\n- Download individual chapters onto your system\r\n- Login / Sign up on a personal account\r\n- Track your most recently visited series\r\n- Re-visit already visited series\r\n- Use URLs to extract a series\r\n- Search keywords and obtain results\r\n- Currently works with **bato.to** and **MangaDex**\r\n\r\n## Python Set-up\r\n> [!NOTE]\r\n> This app supports Python version **3.10** and above.\r\n> \r\n> Latest version of PIP is recommended for requirement installation.\r\n\r\nHere are instructions for installation on a **Linux** machine.\r\n\r\n### Linux\r\n#### Install using APT installer\r\n1) Open the Linux Terminal by pressing **CTRL - ALT - T**, or typing `terminal` in the system search.\r\n\r\n2) Start by updating the list of available packages by typing\r\n```bash\r\n$ sudo apt update\r\n```\r\n\r\n3) Install your preferred version of Python **[3.10+]** by typing\r\n```bash\r\n$ sudo apt install python3.10\r\n```\r\n\r\n4) To make sure that Python downloaded correctly:\r\n```bash\r\n$ python3\r\n```\r\n\r\nIf this doesn't work, explicitly type the Python version you downloaded\r\n```bash\r\n$ python3.10\r\n```\r\n\r\nThe interactive Python shell should open in the terminal, if it does then Python is installed correctly.\r\n\r\nPress **CTRL - C** to close the shell.\r\n\r\n5) Install PIP\r\n- If you haven't done so, type `sudo apt update`\r\n- Then, to install the PIP installer type\r\n```bash\r\n$ sudo apt install python3-pip\r\n ```\r\n\r\n## Set-up\r\n### Installations\r\n- Make sure that Python is installed on your machine, check *<a href=\"#python-set-up\">here</a>* if it isn't.\r\n\r\n    - Make sure `virtualenv` is installed on your machine, to install type\r\n        Open up the terminal, type\r\n        ```bash\r\n        $ pip3 install virtualenv\r\n        ```\r\n\r\n        If this doesn't work, follow the steps in this [*website*][2].\r\n    \r\n    - Navigate into your desired directory, then create a new virtual environment by typing\r\n    ```bash\r\n    $ virtualenv --python3 [name-of-env-here]\r\n    ```\r\n\r\n    - Activate the environment in the *current* terminal, type\r\n    ```bash\r\n    $ source [name-of-env-here]/bin/activate\r\n    ```\r\n\r\n- Install Git, follow the steps [here for Linux][5].\r\n\r\n- Install Redis, follow the steps [here for Linux][7].\r\n\r\n> [!IMPORTANT]\r\n> Any further installations are to be within the recently created **environment**.\r\n>\r\n> Whenever the developement server is run, it **must** from the **same** environment that will be setup now.\r\n\r\n- Install Django, type\r\n    > [!NOTE]\r\n    > (env-name) here will be with same name as your environement *if activated*.\r\n\r\n    ```bash\r\n    (env-name)$ pip3 install Django\r\n    ```\r\n\r\n    If you encounter any issues, visit the official Django [*installation guide*][3].\r\n\r\n- Install required libraries/dependancies, type\r\n```bash\r\n(env-name)$ pip3 install -r requirements.txt\r\n```\r\n\r\n- Start a new Django project\r\n    - Navigate to the directory that you want the project to be contained in\r\n    - Type\r\n        ```bash\r\n        (env-name)$ django-admin startproject [project-name-here]\r\n        ```\r\n    - Navigate into the project\r\n        ```bash\r\n        (env-name)$ cd [project-name-here]\r\n        ```\r\n\r\n- Clone app from repository (Example using SSH)\r\n\r\n    Make sure that you have navigated **inside** the project directory, type \r\n    ```bash\r\n    (env-name)$ git clone git@github.com:acskii/comfy-reader.git\r\n    ```\r\n\r\n### Settings\r\n1) Navigate to `reader/`, and open up `settings.py` in a code editor of your choice.\r\n2) There are **three** that need to be checked\r\n    - **Database**\r\n        During development, the app used a **local SQLITE3** database, which could be left unchanged. \\\r\n        Another option is to replace the information in this section to accomodate a cloud database e.g. Postgre server \\\r\n        Instructions on how to setup a cloud database with be added soon, but if you already have previous knowledge on this technology then feel free to implement it.\r\n\r\n    - **Caching**\r\n        After running a Redis server (instructions found <a href=\"#running\">*here*</a>), add in the local address and port in this setting.\r\n        ```python\r\n        CACHES = {\r\n            'default': {\r\n                'BACKEND': 'django.core.cache.backends.redis.RedisCache',\r\n                'LOCATION': 'redis://127.0.0.1:6379',       # change based on local host 'redis://{host}:{port}'\r\n            }\r\n        }\r\n        ```\r\n        > [!IMPORTANT]\r\n        > **DON'T** use browser cache/cookies, as cache data is larger than the maximum limit of **>4KB**\\\r\n        > Redis was the solution to this problem.\r\n    \r\n    - **Internationalization**\r\n        Edit the `TIME_ZONE` variable into your prefered timezone.\r\n\r\n## Running\r\n1) Start up the Redis server\r\n```bash\r\n$ sudo systemctl start redis-server\r\n```\r\n> [!NOTE]\r\n> To close the local server:\r\n> ```$ sudo systemctl stop redis-server```\r\n\r\n2) Navigate to the project directory, type\r\n```bash\r\n(env-name)$ python3 manage.py runserver\r\n```\r\n\r\n3) Open up your browser, and type in the URL provided in the terminal screen (*likely* `127.0.0.1:8000`)\r\n\r\n## Admin User\r\nNavigate to the project directory, type\r\n```bash\r\n(env-name)$ python3 manage.py createsuperuser\r\n```\r\nType in your username, email, and password.\\\r\nYou can use them to login on the app.\r\n\r\n## Contributions\r\nThis is a personal project of mine, but feel free to suggest improvements, share insights, or discuss challenges.\r\n\r\n## License\r\nThis repository is licensed under the **GNU General Public License v3.0**.\r\n\r\n[1]: https://www.python.org/downloads/windows/\r\n[2]: https://virtualenv.pypa.io/en/latest/installation.html#via-pip\r\n[3]: https://docs.djangoproject.com/en/5.1/topics/install/#installing-an-official-release-with-pip\r\n[4]: https://git-scm.com/downloads/win\r\n[5]: https://git-scm.com/downloads/linux\r\n[6]: https://redis.io/docs/latest/operate/oss_and_stack/install/install-redis/install-redis-on-windows/\r\n[7]: https://redis.io/docs/latest/operate/oss_and_stack/install/install-redis/install-redis-on-linux/"}]